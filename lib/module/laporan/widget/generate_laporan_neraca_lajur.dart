import 'package:flutter/services.dart';
import 'package:htmltopdfwidgets/htmltopdfwidgets.dart';
import 'package:ksu_budidaya/core.dart';
import 'package:ksu_budidaya/model/laporan/laporan_hasil_usaha_model.dart';
import 'package:pdf/widgets.dart' as pw;

doGenerateLaporanNeracaLajur({required LaporanController controller}) async {
  showCircleDialogLoading();
  try {
    final pdf = pw.Document();

    DataLaporanHasilUsaha data =
        controller.resultNeracaLajur.data ?? DataLaporanHasilUsaha();

    List<RowLaporanNeracaLajur> rows = [
      RowLaporanNeracaLajur(
        uraian: "KAS",
        neracaAwalD: 100000,
        neracaAwalK: 100000,
        neracaMutasiD: 100000,
        neracaMutasiK: 100000,
        neracaPercobaanD: 100000,
        neracaPercobaanK: 100000,
        neracaSaldoD: 100000,
        neracaSaldoK: 100000,
        neracaHasilUsahaD: 100000,
        neracaHasilUsahaK: 100000,
        neracaAkhirD: 100000,
        neracaAkhirK: 100000,
      ),
      RowLaporanNeracaLajur(
        uraian: 'KAS',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'BANK BRI',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'PIUTANG DAGANG',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'PERSEDIAAN',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'PENGHAPUSAN PERSEDIAAN',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'INVENTARIS',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'AKUM. PENY. INVENTARIS',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'GEDUNG',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'AKUM. PENY. GEDUNG',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'UTANG DAGANG',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'UTANG DARI SP',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'MODAL TIDAK TETAP (R/C)',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'MODAL DISETOR',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'USAHA LAIN-LAIN TOKO',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'MODAL UNIT TOKO',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'SHU TH. 2023',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'SHU TH. 2024',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'PENJUALAN TUNAI',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'PENJUALAN KREDIT',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'PENJUALAN QRIS',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'PENDAPATAN SEWA',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'PENDAPATAN LAIN-LAIN',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'PEMBELIAN TUNAI',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'PEMBELIAN KREDIT',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'AKUM. PENY. INVENTARIS',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'RETUR PEMBELIAN',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'BEBAN GAJI',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'UANG MAKAN',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'THR KARYAWAN',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'BEBAN ADM. & UMUM',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'BEBAN PERLENGKAPAN TOKO',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'BEBAN PENY. INVENTARIS',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'BEBAN PENY. GEDUNG',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'PEMELIHARAAN INVENTARIS',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'PEMELIHARAAN GEDUNG',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'PENGELUARAN LAIN-LAIN',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'PENGELUARAN PUSAT LAIN',
        neracaAwalD: null,
        neracaAwalK: null,
        neracaMutasiD: null,
        neracaMutasiK: null,
        neracaPercobaanD: null,
        neracaPercobaanK: null,
        neracaSaldoD: null,
        neracaSaldoK: null,
        neracaHasilUsahaD: null,
        neracaHasilUsahaK: null,
        neracaAkhirD: null,
        neracaAkhirK: null,
      ),
      RowLaporanNeracaLajur(
        uraian: 'TOTAL',
        neracaAwalD: 1000000,
        neracaAwalK: 1000000,
        neracaMutasiD: 1000000,
        neracaMutasiK: 1000000,
        neracaPercobaanD: 1000000,
        neracaPercobaanK: 1000000,
        neracaSaldoD: 1000000,
        neracaSaldoK: 1000000,
        neracaHasilUsahaD: 1000000,
        neracaHasilUsahaK: 1000000,
        neracaAkhirD: 1000000,
        neracaAkhirK: 1000000,
      ),
    ];

    final ttfBold = await rootBundle.load("assets/fonts/Roboto-Bold.ttf");
    final ttfRegular = await rootBundle.load("assets/fonts/Roboto-Regular.ttf");

    final boldFont = pw.Font.ttf(ttfBold);
    final regularFont = pw.Font.ttf(ttfRegular);

    pdf.addPage(
      pw.MultiPage(
          pageTheme: const pw.PageTheme(
            orientation: pw.PageOrientation.landscape,
            pageFormat: PdfPageFormat.a4,
            margin: pw.EdgeInsets.all(16),
          ),
          header: (pw.Context context) => pw.Column(
                crossAxisAlignment: pw.CrossAxisAlignment.center,
                children: [
                  pw.Center(
                    child: pw.Text(
                      "LAPORAN NERACA LAJUR",
                      textAlign: pw.TextAlign.center,
                      style: pw.TextStyle(
                        font: boldFont,
                        fontWeight: pw.FontWeight.bold,
                        fontSize: 20,
                      ),
                    ),
                  ),
                  pw.SizedBox(height: 16),
                  pw.Center(
                    child: pw.Text(
                      '${getNamaMonth(controller.monthNow).toUpperCase()} - ${controller.yearNow}',
                      textAlign: pw.TextAlign.center,
                      style: pw.TextStyle(
                        font: boldFont,
                        fontWeight: pw.FontWeight.bold,
                        fontSize: 16,
                      ),
                    ),
                  ),
                  pw.SizedBox(height: 16),
                ],
              ),
          build: (pw.Context context) => [
                pw.TableHelper.fromTextArray(
                  border: pw.TableBorder.all(),
                  headerStyle: pw.TextStyle(
                    font: boldFont,
                    color: PdfColors.white,
                    fontSize: 10,
                  ),
                  headerDecoration: const pw.BoxDecoration(
                    color: PdfColor.fromInt(0xFF017260),
                  ),
                  headerAlignments: {
                    0: pw.Alignment.center,
                    1: pw.Alignment.center,
                    2: pw.Alignment.center,
                    3: pw.Alignment.center,
                    4: pw.Alignment.center,
                    5: pw.Alignment.center,
                    6: pw.Alignment.center,
                  },
                  columnWidths: {
                    0: const pw.FlexColumnWidth(11),
                    1: const pw.FlexColumnWidth(10),
                    2: const pw.FlexColumnWidth(10),
                    3: const pw.FlexColumnWidth(10),
                    4: const pw.FlexColumnWidth(10),
                    5: const pw.FlexColumnWidth(10),
                    6: const pw.FlexColumnWidth(10),
                  },
                  headers: [
                    '',
                    'NERACA AWAL',
                    'NERACA MUTASI',
                    'NERACA PERCOBAAN',
                    'NERACA SALDO',
                    'NERACA HASIL USAHA',
                    'NERACA AKHIR',
                  ],
                  data: [],
                ),
                pw.TableHelper.fromTextArray(
                  headerAlignments: {
                    0: pw.Alignment.center,
                    1: pw.Alignment.center,
                    2: pw.Alignment.center,
                    3: pw.Alignment.center,
                    4: pw.Alignment.center,
                    5: pw.Alignment.center,
                    6: pw.Alignment.center,
                    7: pw.Alignment.center,
                    8: pw.Alignment.center,
                    9: pw.Alignment.center,
                    10: pw.Alignment.center,
                    11: pw.Alignment.center,
                    12: pw.Alignment.center,
                  },
                  cellAlignments: {
                    0: pw.Alignment.centerLeft,
                    1: pw.Alignment.centerRight,
                    2: pw.Alignment.centerRight,
                    3: pw.Alignment.centerRight,
                    4: pw.Alignment.centerRight,
                    5: pw.Alignment.centerRight,
                    6: pw.Alignment.centerRight,
                    7: pw.Alignment.centerRight,
                    8: pw.Alignment.centerRight,
                    9: pw.Alignment.centerRight,
                    10: pw.Alignment.centerRight,
                    11: pw.Alignment.centerRight,
                    12: pw.Alignment.centerRight,
                  },
                  headers: [
                    'URAIAN',
                    'D',
                    "K",
                    'D',
                    "K",
                    'D',
                    "K",
                    'D',
                    "K",
                    'D',
                    "K",
                    'D',
                    "K",
                  ],
                  data: rows
                      .map((row) => [
                            row.uraian ?? '',
                            formatMoney(row.neracaAwalD?.toString() ?? ''),
                            formatMoney(row.neracaAwalK?.toString() ?? ''),
                            formatMoney(row.neracaMutasiD?.toString() ?? ''),
                            formatMoney(row.neracaMutasiK?.toString() ?? ''),
                            formatMoney(row.neracaPercobaanD?.toString() ?? ''),
                            formatMoney(row.neracaPercobaanK?.toString() ?? ''),
                            formatMoney(row.neracaSaldoD?.toString() ?? ''),
                            formatMoney(row.neracaSaldoK?.toString() ?? ''),
                            formatMoney(
                                row.neracaHasilUsahaD?.toString() ?? ''),
                            formatMoney(
                                row.neracaHasilUsahaK?.toString() ?? ''),
                            formatMoney(row.neracaAkhirD?.toString() ?? ''),
                            formatMoney(row.neracaAkhirK?.toString() ?? ''),
                          ])
                      .toList(),
                  border: pw.TableBorder.all(),
                  headerStyle: pw.TextStyle(
                    font: boldFont,
                    color: PdfColors.white,
                    fontSize: 10,
                  ),
                  headerDecoration: const pw.BoxDecoration(
                    color: PdfColor.fromInt(0xFF017260),
                  ),
                  cellStyle: pw.TextStyle(
                    font: regularFont,
                    fontSize: 8,
                  ),
                  cellHeight: 30,
                  columnWidths: {
                    0: const pw.FlexColumnWidth(11),
                    1: const pw.FlexColumnWidth(5),
                    2: const pw.FlexColumnWidth(5),
                    3: const pw.FlexColumnWidth(5),
                    4: const pw.FlexColumnWidth(5),
                    5: const pw.FlexColumnWidth(5),
                    6: const pw.FlexColumnWidth(5),
                    7: const pw.FlexColumnWidth(5),
                    8: const pw.FlexColumnWidth(5),
                    9: const pw.FlexColumnWidth(5),
                    10: const pw.FlexColumnWidth(5),
                    11: const pw.FlexColumnWidth(5),
                    12: const pw.FlexColumnWidth(5),
                  },
                ),
              ]),
    );
    Uint8List pdfData = await pdf.save();

    String fileName =
        'Laporan_Neraca_Lajur_${controller.monthNow}_${controller.yearNow}.pdf';

    // await Printing.sharePdf(
    //   bytes: pdfData,
    //   filename: fileName,
    // );
    await Printing.layoutPdf(
      format: PdfPageFormat.a4,
      name: fileName,
      onLayout: (PdfPageFormat format) async => pdfData,
    );
  } catch (e) {
    Get.back();
    showInfoDialog(e.toString(), null);
  }

  Get.back();
}
